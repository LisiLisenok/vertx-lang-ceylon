@includeNamed{'ceylon-common.templ'}

import io.vertx.lang.ceylon { Converter }\n
import @{type.packageName} { @{type.simpleName}_=@{type.simpleName} }\n

\n
shared abstract class @{type.simpleName}(shared String name) of @foreach{value:values}@{asValidMember(value.identifier)}@end{' | '} {\n
}\n

\n
@foreach{value : values}
shared object @{asValidMember(value.identifier)} extends @{type.simpleName}("@{value.identifier}") {}\n
@end{}

\n
shared object toJava@{type.simpleName} extends Converter<@{type.simpleName}, @{type.simpleName}_>() {\n
  shared actual @{type.simpleName}_ convert(@{type.simpleName} src) {\n
    switch (src)
@foreach{value:values}
    case(@{asValidMember(value.identifier)}) { return @{type.simpleName}_.@{asValidMember(value.identifier)}; }\n
@end{}
  }\n
}\n

\n
shared object toCeylon@{type.simpleName} extends Converter<@{type.simpleName}_, @{type.simpleName}>() {\n
  shared actual @{type.simpleName} convert(@{type.simpleName}_ src) {\n
@foreach{value:values}
    if (src == @{type.simpleName}_.@{asValidMember(value.identifier)}) {\n
      return @{asValidMember(value.identifier)};\n
    }\n
@end{}
    throw Exception("Invalid enum value");\n
  }\n
}\n