@includeNamed{'ceylon-common.templ'}

@comment{"Generate the imports"}
@includeNamed{'ceylon-imports.templ'}

@code{
  addClassImport("ceylon.json", "Object", "JsonObject");
  addClassImport("io.vertx.lang.ceylon", "BaseDataObject", "BaseDataObject");
}

@includeNamed{'genImports'}

/* Generated from @{type.name} */\n
shared @if{isClass}class@else{}interface@end{} @{type.raw.simpleName}@if{isClass}(
	@foreach{property:properties}
\n  @if{property.declared}shared @end{}@{genTypeDecl(property.type)}? @{toCeylonIdentifier(property.name)} = null
	@end{','})@if{superType != null} extends @{superType.simpleName}(
	@code{var prev = '\n'}
	@foreach{property:properties}
	@if{!property.declared}
	@{prev}  @{toCeylonIdentifier(property.name)}
	@code{prev = ',\n'}
	@end{}
	@end{})@end{}@end{}@if{abstractSuperTypes.size() > 0} satisfies\n
	@foreach{abstractSuperType : abstractSuperTypes}
  @{abstractSuperType.simpleName}
	@end{' &\n'}
@end{} @if{abstractSuperTypes.empty}satisfies@else{}&@end{} BaseDataObject {\n
  shared actual default JsonObject toJson() {\n
    value json = JsonObject();\n
@foreach{property:properties}
	@if{property.declared}
		@code{propName=toCeylonIdentifier(property.name)}
		@code{propType=property.type}
    if (exists @{propName}) {\n
		@if{propType.kind.basic || propType.kind.json}
      json.put("@{propName}", @{propName});\n
		@else{propType.kind == CLASS_DATA_OBJECT}
      json.put("@{propName}", @{propName}.toJson());\n
		@end{}
    }\n
	@end{}
@end{}
    return json;\n
  }\n
}\n
